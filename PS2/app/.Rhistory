shiny::runApp()
sigmaXY <- function(rho, sdX, sdY) {
covTerm <- rho * sdX * sdY
VCmatrix <- matrix(c(sdX^2, covTerm, covTerm, sdY^2),
2, 2, byrow = TRUE)
return(VCmatrix)
}
genBVN <- function(n = 1, seed = NA, muXY=c(0,1), sigmaXY=diag(2)) {
if(!is.na(seed)) set.seed(seed)
rdraws <- rmvnorm(n, mean = muXY, sigma = sigmaXY)
return(rdraws)
}
if (!require("mvtnorm")) install.packages("mvtnorm"); library(mvtnorm)
if (!require("ggplot2")) install.packages("ggplot2"); library(ggplot2)
loanData <- function(noApproved, noDenied, muApproved, muDenied, sdApproved,
sdDenied, rhoApproved, rhoDenied, seed=1111) {
sigmaApproved <- sigmaXY(rho=rhoApproved, sdX=sdApproved[1], sdY=sdApproved[2])
sigmaDenied <- sigmaXY(rho=rhoDenied, sdX=sdDenied[1], sdY=sdDenied[2])
approved <- genBVN(noApproved, muApproved, sigmaApproved, seed = seed)
denied <- genBVN(noDenied, muDenied, sigmaDenied, seed = seed+1)
loanDf <- as.data.frame(rbind(approved,denied))
deny <- c(rep("Approved", noApproved), rep("Denied", noDenied))
target = c(rep(0, noApproved), rep(1, noDenied))
loanDf <- data.frame(loanDf, deny, target)
colnames(loanDf) <- c("PIratio", "solvency", "deny", "target")
return(loanDf)
}
loanDf <- loanData(noApproved=50, noDenied=50, c(4, 150), c(10, 100),
c(1,20), c(2,30), -0.1, 0.6, 1221)
datafit <- lm(target ~ solvency + PIratio + 1, data=loanDf)
summary(datafit)
weights <- coef(datafit)[c("solvency", "PIratio")]
bias <- coef(datafit)[1]
head(predict(datafit))
sum(predict(datafit)>0.5)
intercept <- (-bias + 0.5)/weights["PIratio"]
slope <- -(weights["solvency"]/weights["PIratio"])
boundaryDf <- data.frame(PIratio=x, solvency=y,
deny=rep("Boundary", length(x)))
x <- seq(min(loanDf["PIratio"]), max(loanDf["PIratio"]),
length.out = nrow(loanDf))
y <- -(weights["PIratio"]/weights["solvency"])*x +
(0.5-bias)/weights["solvency"]
# careful, colnames have to match!
boundaryDf <- data.frame(PIratio=x, solvency=y,
deny=rep("Boundary", length(x)))
predictedLabels <- ifelse(predict(datafit) < 0.5, "Approved", "Denied")
confMatrixFreq <- table(loanDf$deny, predictedLabels)
confMatrixFreq
confMatrixProp <- prop.table(confMatrixFreq, 1)
confMatrixProp
shiny::runApp()
shiny::runApp()
